dframe <- data.frame(x = 1:10,
y = letters[1:10])
class(dframe)
otype(dframe)
install.packages('pryr')
library(pryr)
dframe <- data.frame(x = 1:10,
y = letters[1:10])
class(dframe)
otype(dframe)
k <- list(fname = "John",
lname = "Smith",
age = 35,
gender = "M",
married = TRUE)
class(k)
otype(k)
class(k) <- "client"
class(k)
otype(k)
str(k)
k$fname
k$lname
k$married
class(dframe) <- "client"
class(dframe)
otype(dframe)
dframe
dframe <- structure(dframe, # object
class = "data.frame") # class
class(dframe)
otype(dframe)
dframe
class(dframe) <- append(class(dframe), "client")
class(dframe)
k
print(k)
print(dframe)
print(1:10)
print(lm(1:10~rnorm(10)))
print
ftype(print)
ftype(print.data.frame)
methods(print)
print.ts
stats:::print.ts
getAnywhere(print.ts)
methods(class = "data.frame")
methods(class = "client")
print(k)
methods(class = "default")
print.client <- function(x) {
# print first name and last name
# and go to the new line
cat(x$fname, x$lname, "\n")
# print age and go to the new line
cat("age:", x$age, "years\n")
# print gender and go to the new line
cat("gender:", x$gender, "\n")
# print if married and go to the new line
cat("married:", ifelse(x$married, "Yes", "No"), "\n")
}
print(k)
k
client <- function(fname, lname, age, gender, married) {
new_object <- list(fname = fname,
lname = lname,
age = age,
gender = gender,
married = married)
# it is convenient to assign a class
# attribute by calling the structure function
structure(new_object, class = "client")
}
k2 <- client("Joan",
"Warren",
24,
"F",
FALSE)
print(k2)
mean.client <- function(x) x$age
mean(k)
methods(class = "client")
mean.client <- function(x) x$age
mean(k)
methods(class = "client")
unclass(k)
print
plot
mean
age <- function(x) {
UseMethod("age")
}
age(k)
age.default <- function(x) {
message("This is a generic function")
}
age(k)
age.client <- function(x) x$age
age(k)
age(k2)
add_all <- function(x){
message('This is a generic function')
}
add_all
add_all(x)
add_all.numeric(x) {
if is.numeric(x) {
sum(x)
}
}
add_all.numeric <- function(x) {
if is.numeric(x) {
sum(x)
}
}
add_all.numeric <- function(x){
if is.numeric(x){
sum(x)
} else {
message('The argument is not numeric')
}
}
add_all.default <- function(x){
message('This is a generic function')
}
add_all.numeric <- function(x){
if is.numeric(x){
sum(x)
} else {
message('The argument is not numeric')
}
}
add_all.numeric <- function(x){
if is.numeric(x){
sum
} else {
message('The argument is not numeric')
}
}
add_all.numeric <- function(x){
if is.numeric(x){
sum(x)
} else {
message('The argument is not numeric')
}
}
add_all.numeric <- function(x)
add_all.numeric <- function(x)
add_all.numeric <- function(x)
add_all.numeric <- function(x)
add_all.numeric <- function(x){
is.numeric(x){
sum(x)
} else {
message('The argument is not numeric')
}
}
add_all.numeric <- function(x){
is.numeric(x){
sum(x)
}
}
add_all.character <- function(x){
is.character(x) {
cat(x)
}
}
add_all <- function(x) {
UseMethod("add_all")
}
add_all.default <- function(x){
message('This is a generic function')
}
add_all.numeric <- function(x){
is.numeric(x){
sum(x)
}
}
add_all.numeric <- function(x){
is.numeric(){
sum()
}
}
add_all.numeric(x) <- function(x){
is.numeric(x){
sum(x)
}
}
add_all.numeric() <- function(x){
is.numeric(x){
sum(x)
}
}
add_all.numeric <- function(){
is.numeric(){
sum()
}
}
add_all() <- function(x) {
UseMethod("add_all")
}
add_all.default <- function(x){
message('This is a generic function')
}
add_all.numeric <- function(x){
is.numeric(x){
sum(x)
}
}
add_all(x) <- function(x) {
UseMethod("add_all")
}
add_all <- function(x) {
UseMethod("add_all")
}
add_all <- function() {
UseMethod("add_all")
}
add_all.default <- function(x){
message('This is a generic function')
}
add_all.numeric <- function(x){
is.numeric(x){
sum(x)
}
}
add_all.character <- function(x){
is.character(x) {
cat(x)
}
}
add_all.numeric <- function(x){
is.numeric(x){
sum(x)
}
}
methods(predict())
methods(predict())
methods(predict)
add_all.numeric <- function(x){
sum(x)
}
add_all.character <- function(x){
cat(x)
}
r <- [1:10]
r <- c[1:10]
r
r <- c[1:10]
r
add_all(3)
add_all.numeric(x) <- function(x){
sum(x)
}
add_all <- function(x) {
UseMethod("add_all")
}
add_all.default <- function(x){
message('This is a generic function')
}
add_all.numeric(x) <- function(x){
sum(x)
}
add_all.numeric <- function(x){
sum(x)
}
add_all.character <- function(x){
cat(x)
}
add_all(3)
add_all(3,5)
b <- list(1:10)
b
add_all(b)
b <- (1:10)
b
add_all(b)
c <- letters(1:10)
c <- letters[1:10]
c
c <- letters[1:10]
add_all(c)
student <- function(first_name, last_name, student_id, year, grades, seminar) {
new_object <- list(first_name = first_name,
last_name = last_name,
student_id = student_id,
year = year,
grades = grades,
seminar = seminar)
structure(new_object, class = 'student')
}
student.default <- function(first_name, last_name, student_id, year, grades, seminar) {
message('This is the default')
}
student.average <- function(first_name, last_name, student_id, year, grades, seminar){
mean(grades)
}
