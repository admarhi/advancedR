} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
} else (is.factor(survey[ , i])) {
barplot(table(survey[ , i]))
}
if (is.integer(survey[ , i])) {
boxplot(survey[ , i])
} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
} else (is.factor(survey[ , i])) {
barplot(table(survey[ , i]))
}
for (i in ncol(survey)) {
if (is.integer(survey[ , i])) {
boxplot(survey[ , i])
} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
} else (is.factor(survey[ , i])) {
barplot(table(survey[ , i]))
}
}
for (i in ncol(survey)) {
if (is.integer(survey[ , i])) {
boxplot(survey[ , i])
} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
} else (is.factor(survey[ , i])) {
barplot(table(survey[ , i]))
}
}
if (is.integer(survey[ , i])) {
boxplot(survey[ , i])
} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
} else (is.factor(survey[ , i])) { barplot(table(survey[ , i])) }
for (i in ncol(survey)) {
if (is.integer(survey[ , i])) {
boxplot(survey[ , i])
} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
}
}
for (i in ncol(survey)) {
if (is.integer(survey[ , i])) {
boxplot(survey[ , i])
} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
}
}
if (is.integer(survey[ , i])) {
boxplot(survey[ , i])
} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
} else (is.factor(survey[ , i])) {
barplot(table(survey[ , i]))
}
}
for (i in ncol(survey)) {
for (i in ncol(survey)) {
for (i in ncol(survey)) {
if (is.integer(survey[ , i])) {
boxplot(survey[ , i])
} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
} else (is.factor(survey[ , i])) {
barplot(table(survey[ , i]))
}
}
for (i in ncol(survey)) {
if (is.integer(survey[ , i])) {
boxplot(survey[ , i])
} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
} else (is.factor(survey[ , i])) {
barplot(table(survey[ , i]))
}
}
for (i in ncol(survey)) {
if (is.integer(survey[ , i])) {
boxplot(survey[ , i])
} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
} else (is.factor(survey[ , i])) {
barplot(table(survey[ , i])) }
}
for (i in ncol(survey)) {
if (is.integer(survey[ , i])) {
boxplot(survey[ , i])
} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
} else (is.factor(survey[ , i])) {
barplot(table(survey[ , i]))
}
}
for (i in ncol(survey)) {
if (is.integer(survey[ , i])) {
boxplot(survey[ , i])
} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
} else if (is.factor(survey[ , i])) {
barplot(table(survey[ , i]))
}
}
for (i in ncol(survey)) {
if (is.integer(survey[ , i])) {
boxplot(survey[ , i])
} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
} else if (is.factor(survey[ , i])) {
barplot(table(survey[ , i]))
}
}
for (i in columns) {
if (is.integer(survey[ , i])) {
boxplot(survey[ , i])
} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
} else if (is.factor(survey[ , i])) {
barplot(table(survey[ , i]))
}
}
boxplot(survey[ , i])
if (is.integer(survey[ , i])) {
boxplot(survey[ , i])
} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
} else if (is.factor(survey[ , i])) {
barplot(table(survey[ , i]))
}
for (i in columns) {
if (is.integer(survey[ , i])) {
boxplot(survey[ , i])
} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
} else if (is.factor(survey[ , i])) {
barplot(table(survey[ , i]))
}
}
if (is.integer(survey[ , i])) {
boxplot(survey[ , i])
} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
} else if (is.factor(survey[ , i])) {
barplot(table(survey[ , i]))
}
boxplot(survey[ , i])
for (i in columns) {
if (is.integer(survey[ , i])) {
boxplot(survey[ , i])
} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
} else if (is.factor(survey[ , i])) {
barplot(table(survey[ , i]))
}
}
# Dataset for examples:
# firstly perform operations from line 373 to 376
library(MASS)
data(survey)
head(survey)
# I option: to loop over the column number
columns <- ncol(survey)
rows <- nrow(survey)
for (i in columns) {
if (is.integer(survey[ , i])) {
boxplot(survey[ , i])
} else if (is.numeric(survey[ , i])) {
hist(survey[ , i])
} else if (is.factor(survey[ , i])) {
barplot(table(survey[ , i]))
}
}
hist help()
help("hist")
str(survey)
View(survey)
for (i in columns) {
if (is.integer(survey[i, ])) {
boxplot(survey[i, ])
} else if (is.numeric(survey[i, ])) {
hist(survey[i, ])
} else if (is.factor(survey[i, ])) {
barplot(table(survey[i, ]))
}
}
for (i in columns) {
if (is.integer(survey[, i])) {
boxplot(survey[, i])
} else if (is.numeric(survey[, i])) {
hist(survey[, i])
} else if (is.factor(survey[, i])) {
barplot(table(survey[, i]))
}
}
is.data.frame(survey)
is.integer(survey[, 1]
is.integer(survey[, 1])
for (i in columns) {
if (is.numeric(survey[, i])) {
boxplot(survey[, i])
} else if (is.numeric(survey[, i])) {
hist(survey[, i])
} else if (is.factor(survey[, i])) {
barplot(table(survey[, i]))
}
}
for (i in columns) {
if (is.numeric(survey[, i])) {
boxplot(survey[, i])
} else if (is.numeric(survey[, i])) {
hist(survey[, i])
} else if (is.factor(survey[, i])) {
barplot(table(survey[, i]))
}
}
for (i in 1:columns) {
if (is.numeric(survey[, i])) {
boxplot(survey[, i])
} else if (is.numeric(survey[, i])) {
hist(survey[, i])
} else if (is.factor(survey[, i])) {
barplot(table(survey[, i]))
}
}
for (i in 1:ncol(survey)) {
if (is.numeric(survey[, i])) {
boxplot(survey[, i])
} else if (is.numeric(survey[, i])) {
hist(survey[, i])
} else if (is.factor(survey[, i])) {
barplot(table(survey[, i]))
}
}
for (i in 1:ncol(survey)) {
if (is.numeric(survey[, i])) {
boxplot(survey[, i])
} else if (is.numeric(survey[, i])) {
hist(survey[, i])
} else if (is.factor(survey[, i])) {
barplot(table(survey[, i]))
}
}
# II option: to loop over the column name
names <- colnames(survey)
for (name in names) {
if (is.numeric(survey$name)) {
boxplot(survey$name)
} else if (is.numeric(survey$name)) {
hist(survey$name)
} else if (is.factor(survey$name)) {
barplot(table(survey$name))
}
}
for (name in names) {
if (is.numeric(survey$name)) {
boxplot(survey$name)
} else if (is.numeric(survey$name)) {
hist(survey$name)
} else if (is.factor(survey$name)) {
barplot(table(survey$name))
}
}
for (i in names) {
if (is.numeric(survey$i)) {
boxplot(survey$i)
} else if (is.numeric(survey$i)) {
hist(survey$i)
} else if (is.factor(survey$i)) {
barplot(table(survey$i))
}
}
# II option: to loop over the column name
names <- colnames(survey)
for (i in names) {
if (is.numeric(survey$i)) {
boxplot(survey$i)
} else if (is.numeric(survey$i)) {
hist(survey$i)
} else if (is.factor(survey$i)) {
barplot(table(survey$i))
}
}
for (i in 1:ncol(survey)) {
if (is.numeric(survey[, i])) {
boxplot(survey[, i])
} else if (is.numeric(survey[, i])) {
hist(survey[, i])
} else if (is.factor(survey[, i])) {
barplot(table(survey[, i]))
}
}
# They report whether any or all of their arguments are TRUE
# https://www.oreilly.com/library/view/the-art-of/9781593273842/ch02s05.html
x <- 1:10
any(x >8)
c(x[1]>8 | x[2]>8 | x[3]>8 | x[4]>8 | x[5]>8 | x[6]>8 | x[7]>8 | x[8]>8
| x[9]>8 | x[10]>8)
any(x > 88)
c(x[1]>88 | x[2]>88 | x[3]>88 | x[4]>88 | x[5]>88 | x[6]>88 | x[7]>88 | x[8]>88
| x[9]>88 | x[10]>88)
all(x  <88)
c(x[1]<88 & x[2]<88 & x[3]<88 & x[4]<88 & x[5]<88 & x[6]<88 & x[7]<88 & x[8]<88
& x[9]<88 & x[10]<88)
all(x > 0)
c(x[1]>0 & x[2]>0 & x[3]>0 & x[4]>0 & x[5]>0 & x[6]>0 & x[7]>0 & x[8]>0
& x[9]>0 & x[10]>0)
###### using loops
x <- 1:10
check<-c()
for (i in 1:length(x)) {
add<-x[i]>
check<-rbind(check,add)
}
first<-check[1]
for (i in 2:length(check)) {
first <- c(first | check[i])
}
first
all(x > 0)
View(FAOSTAT_data_4_30_2022)
FAOSTAT_data_4_30_2022 <- read_csv("FAOSTAT_data_4-30-2022.csv")
library(readr)
FAOSTAT_data_4_30_2022 <- read_csv("FAOSTAT_data_4-30-2022.csv")
FAOSTAT_data_4_30_2022 <- read_csv("FAO/shinyFAOSTAT_data_4-30-2022.csv")
FAOSTAT_data_4_30_2022 <- read_csv("FAO_shiny/FAOSTAT_data_4-30-2022.csv")
View(FAOSTAT_data_4_30_2022)
summary(FAOSTAT_data_4_30_2022)
T | T
T | F
F | T
F | F
xor(T, F)
xor(F, T)
xor(T, T)
(T & !F) | (!F & T)
first<-any(1 + 2 == 3, 2 + 3 == 4, 3 + 4 == 5)
second<-2 + 3 == 5
third<-3 + 4 == 7
all(first, second, third)
all(any(1 + 2 == 3, 2 + 3 == 4, 3 + 4 == 5), 2 + 3 == 5, 3 + 4 == 7)
library(dplyr)
fao_data_small <- select(filter(FAOSTAT_data_4_30_2022, Area = "Germany"),
c(Element, Item, Year, Unit, Value))
fao_data_small <- select(filter(FAOSTAT_data_4_30_2022, Area == "Germany"),
c(Element, Item, Year, Unit, Value))
summary(fao_data_small)
head(fao_data_small)
hist(fao_data_small)
plot(fao_data_small)
fao_data_small <- select(FAOSTAT_data_4_30_2022,
c(Element, Item, Year, Unit, Value))
head(fao_data_small)
summary(fao_data_small)
fao_data_small <- select(FAOSTAT_data_4_30_2022,
c(Area,Element, Item, Year, Unit, Value))
unique[fao_data_small$Item]
unique[fao_data_small["Item"]]
unique(fao_data_small[c("Item")])
products <- unique(fao_data_small[c("Item")])
products
View(products)
unique(fao_data_small[c("Element")])
plot(filter(fao_data_small, Element == "Milk Animals"))
plot(filter(fao_data_small,
Element == "Producing Animals/Slaughtered",
year == 2018))
plot(filter(fao_data_small,
Element == "Producing Animals/Slaughtered",
Year == 2018))
plot(filter(fao_data_small,
Element == "Producing Animals/Slaughtered",
Year == 2018),
c(Area, Value))
countries <- unique(fao_data_small[c("Area")])
countries
unique(fao_data_small[c("Element")])
elements <- c(unique(fao_data_small[c("Element")]))
View(elements)
elements <- unique(fao_data_small[c("Element")])
products
ggplot2::aes(filter(fao_data_small,
Element == "Producing Animals/Slaughtered",
Year == 2018),
c(Area, Value))
shiny::runApp('fao_data')
head(fao_data_small)
library(ggplot2)
data(diamonds)
head(diamonds)
data.list <- split(diamonds, interaction(diamonds$cut, diamonds$color))
for (i in 1:length(data.list)) {
hist(summary(lm(price ~ carat, data = data.list[[i]]))$residuals,
main = paste0(names(data.list)[[i]]))
}
data.list
lapply(data.list, hist(summary(lm(price ~ carat))))
FUN = function(x) {
hist(summary(lm(price ~ carat, data = data.list[[i]]))$residuals,
main = paste0(names(data.list)[[i]]))
}
lapply(data.list, FUN)
countries
products
knitr::opts_chunk$set(echo = FALSE)
library(readr)
library(dplyr)
library(ggplot2)
FAOSTAT_data_4_30_2022 <- read_csv("FAO_shiny/FAOSTAT_data_4-30-2022.csv")
FAOSTAT_data_4_30_2022 <- read_csv("FAOSTAT_data_4-30-2022.csv")
summary(FAOSTAT_data_4_30_2022)
fao_data_small <- select(FAOSTAT_data_4_30_2022,
c(Area,Element, Item, Year, Unit, Value))
head(fao_data_small)
summary(fao_data_small)
products <- unique(fao_data_small[c("Item")])
products
countries <- unique(fao_data_small[c("Area")])
countries
elements <- unique(fao_data_small[c("Element")])
head(fao_data)
knitr::opts_chunk$set(echo = FALSE)
library(readr)
library(dplyr)
library(ggplot2)
FAOSTAT_data_4_30_2022 <- read_csv("FAOSTAT_data_4-30-2022.csv")
summary(FAOSTAT_data_4_30_2022)
fao_data <- select(FAOSTAT_data_4_30_2022,
c(Area,Element, Item, Year, Unit, Value))
head(fao_data)
summary(fao_data)
products <- unique(fao_data[c("Item")])
products
elements <- unique(fao_data[c("Element")])
data2 <- read_csv("prod_ind/Production_Indices_E_All_Data_NOFLAG.csv")
summary(data2)
data2 <- read_csv("FAO_shiny/prod_ind/Production_Indices_E_All_Data_NOFLAG.csv")
summary(data2)
head(data2)
head(data2)
data2 <- read_csv("FAO_shiny/prod_ind/Production_Indices_E_All_Data.csv")
head(data2)
View(data2)
View(data2)
data3 <- read_csv("FAO_shiny/prod_ind/FAOSTAT_data_6-8-2022.csv")
head(data3)
head(data3)
View(data3)
View(data3)
data4 <- read_csv("FAO_shiny/prod_ind/FAOSTAT_data_6-8-2022-2.csv")
head(data4)
View(data4)
View(data4)
View(data4)
data5 <- read_csv("FAO_shiny/prod_ind/Production_Crops_Livestock_E_All_Data.csv")
View(data5)
View(data5)
data6 <- data5[-c(1,3,5)]
View(data6)
View(data6)
data6 <- data5[-c(1,3,5,seq(8, ncol(data5), 2))]
View(data6)
data6 <- data5[-c(1,3,5,seq(7, ncol(data5), 2))]
products2 <- unique(data6[c("Item")])
View(products2)
View(data6)
data7 <- data6[data6$Element != "Area harvested"]
data7 <- subset(data6, data6$Element != "Area harvested")
View(data7)
products2
summary(data7)
summary(data6)
View(products2)
View(products2)
data8 <- subset(data7, data7$Item != c("Camels", "Cattle", "Chickens", "Goats",
"Horses", "Sheep", "Poultry Birds",
"Sheep and Goats", "Buffaloes",
"Ducks", "Pigs", "Camelids, other",
"Rodents, other"))
View(data8)
View(data8)
data8 <- subset(data7, data7$Item = c("Camels", "Cattle", "Chickens", "Goats",
"Horses", "Sheep", "Poultry Birds",
"Sheep and Goats", "Buffaloes",
"Ducks", "Pigs", "Camelids, other",
"Rodents, other"))
data8 <- subset(data7, data7$Item = c("Camels", "Cattle", "Chickens", "Goats", "Horses", "Sheep", "Poultry Birds", "Sheep and Goats", "Buffaloes", "Ducks", "Pigs", "Camelids, other", "Rodents, other"))
data8 <- subset(data7, data7$Item == c("Camels", "Cattle", "Chickens", "Goats", "Horses", "Sheep", "Poultry Birds", "Sheep and Goats", "Buffaloes", "Ducks", "Pigs", "Camelids, other", "Rodents, other"))
View(data8)
summary(data8)
unique(data8[c("Item")])
View(data2)
data8 <- subset(data2, data7$Item == c("Camels", "Cattle", "Chickens", "Goats", "Horses", "Sheep", "Poultry Birds", "Sheep and Goats", "Buffaloes", "Ducks", "Pigs", "Camelids, other", "Rodents, other"))
View(data8)
View(data2)
data8 <- subset(data2, data2$Item == c("Camels", "Cattle", "Chickens", "Goats", "Horses", "Sheep", "Poultry Birds", "Sheep and Goats", "Buffaloes", "Ducks", "Pigs", "Camelids, other", "Rodents, other"))
View(data8)
fig <- get_figure("manfredini", 63)
library(plotly)
fig <- get_figure("manfredini", 63)
data8 <- subset(data2, data2$Item == c("Cattle", "Chickens", "Goats", "Horses", "Sheep", "Buffaloes", "Ducks", "Pigs"))
View(data8)
View(data7)
data8 <- subset(data7, data7$Item == c("Cattle", "Chickens", "Goats", "Horses", "Sheep", "Buffaloes", "Ducks", "Pigs"))
data8 <- subset(data7, data7$Item == c("Cattle","Chickens","Goats","Horses","Sheep","Ducks","Pigs"))
View(data8)
for (i in unique(data8$Item)) {
subset(data8, data8$Item == i) %>% plot.ts()
}
subset(data8, data8$Item == i) %>% plot()
for (i in unique(data8$Item)) {
subset(data8, data8$Item == i) %>% plot()
}
